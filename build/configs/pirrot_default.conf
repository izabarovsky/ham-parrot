; Pirrot Configuration

[general]

; The timezone you wish to use for logging, TTS services, and the web interface (if enabled)
timezone = Europe/Kyiv

alerts = false
alerts_key = XXXXXXXX:YYYYYYYYYYYYYYYYYYY
alerts_location_uid = 14

; Clock enable
clock = false

; Simplex repeater (ident) code
callsign = RPT1

; Enable automated transmissions and the "repeat" functionality.
; Optionally you can disable the repeater from transmitting althoughter and thus not "repeating" any communications received.
enabled = true

; Repeater operation mode
; 'simplex-vox' = Simplex Mode - Voice Operated (auto-record and then transmit when it "hears" mic input on the USB sound card.)
; 'simplex-cor' = Simplex Mode - Carrier Operated Relay/Switch (record and then transmit when the COR/COS GPIO pin is ON (aka. "high")
; 'duplex-cor' = Duplex Mode - Carrier Operated Relay/Switch (pass-through transmission when the COR/COS GPIO pin is ON (aka. "high")
transmit_mode = simplex-cor

; Transmit Timeout
; Protects the transmitter by automatically timing out after the specified number of seconds (default 120 seconds - 2 minutes)
; This feature is only supported when Pirrot is using a COS/COR modes.
transmit_timeout = 120

; Courtesy tone
; To disable courtesy tones set to: false
; Otherwise use the filename of the courtesy tone, eg. BeeBoo (without the .wav extension)
courtesy_tone = BeeBoo

; Enable the "basic" station automatic identification?
; This will automatically broadcast the repeater call sign, PL tone etc. at the ident_interval period.
auto_ident = false

; This feature wiill override the computer spoken "auto_ident" repeater ident message and will instead play a custom
; uploaded MP3 file of your choice, this file should be uploaded to: /opt/pirrot/storage/input/custom.mp3
ident_use_custom = false

; Ident interval (seconds) - 600 = 10 minutes!
; If you want to disable all interval transmissions (station, custom message and weather), set this value to 0.
ident_interval = 600

; Transmit the time with the ident message (when the default "basic" identification is broadcast).
ident_time = true

; Send morse code with the ident (when the default "basic" identification is broadcast)
; **THIS FEATURE IS PLANNED FOR FUTURE INCLUSION BUT NOT AVAILABLE YET!**
ident_morse = false

; The PL/CTCSS to access the repeater
; Set to 'false' if you do not have a CTCSS/PL code to access the repeater.
; otherwise set the CTCSS/PL tone here eg. '110.9'
pl_tone = 110.9

; An optional delay before transmission (seconds) - default is "0.2" (if set to "0" there will be no delay and therefore immediately repeat the transmission which might lead to cut audio recordings)
; Implemented as per user feature request here: https://github.com/allebb/pirrot/issues/21
delayed_playback_interval = 0.2

; VOX tuning parameters (if using repeater in VOX mode)
; Default value: "1 0.5 5% 1 1.0 5%" (eg. Wait until it hears activity above the threshold (5%) for half a second (0.5) then start recording, stop recording when audible activity falls to zero for one second.
; You can also attempt to play with "vox_tuning = 1 0.1 5% 1 1.0 5% vad gain -n" ('vad' = Trim any initial silence up to voice detection; 'gain -n' = Normalise the gain)
vox_tuning = 1 0.5 5% 1 1.0 5%


[audio]

; The audio driver/interface to use on recording
; Linux/RPi = alsa
; MacOSX = coreaudio
; Windows = waveaudio
record_device = alsa

[morse]

; The WPM (Words per minute)
morse_wpm = 20

; The freqency playback (in hertz).
morse_frequency = 800

; Output volume
morse_output_volume = 0.7

[storage]

; Enable saving of recordings
store_recordings = false

; Purge recording after (X days), 0 to disable purging of recordings.
purge_recording_after = 7

[web-interface]

; Enable the light-weight web interface
web_interface_enabled = false

; The TCP port to listen on
web_interface_port = 8440

; The IP address to bind to (default: 0.0.0.0)
web_interface_bind_ip = 0.0.0.0

; Enable logging of web server access logs to /var/log/pirrot-web.log
web_interface_logging = false

; Enable GPS position and atomic clock (time) output on the dashboard.
; ** You MUST setup and configure the device and ensure that the GPS receiver is connected to the RaspberryPi **
; ** Having this setting enabled but no device connected will cause the web interface to become unresponsive **
web_gps_enabled = false

[tripwire]

; Enable the tripwire feature (sends a web hook when transmission is received)
tripwire_enabled = false

; The URL to send the HTTP request payload to when the "tripwire" is activated (a transmission is received)
; eg. http://yourwebsite.com/my-tripwire-handler-endpoint
tripwire_url = null

; This value will ensure that further transmissions within this time period (in seconds) do not trigger
; additional HTTP web hook requests (default value is 300)
tripwire_ignore_interval = 300

; HTTP request timeout (in seconds)
tripwire_request_timeout = 30

[gpio]

; The GPIO input pin (BCM) number to use for the COS relay (required if running in COS mode).
in_cor_pin = 18

; The GPIO output pin (BCM) number to use for the PTT relay.
out_ptt_pin = 23

; The "Ready status" LED output pin (BCM) number
out_ready_led_pin = 17

; The "RX" LED output pin (BCM) number
out_rx_led_pin = 27

; The "TX" LED output pin (BCM) number
out_tx_led_pin = 22

; COS Pin is inverted?
cos_pin_invert = false

; PTT Pin is inverted?
ptt_pin_invert = false

; Ready LED pin is inverted?
ready_pin_invert = false

; RX (Recieve) LED pin is inverted?
rx_pin_invert = false

; TX (Transmit) LED pin is inverted?
tx_pin_invert = false

[archive]

; Enable audio recording archiving to a remote FTP/FTPS server?
; This will automatically archive all recordings nightly to a remote FTP server.
archive_enabled = false

; The FTP server address (FQDN or IP address)
ftp_host = ftp.example.com

; The FTP server uses SSL (FTPS)
ftp_ssl = false

; The FTP server port
ftp_port = 21

; Use passive (PASV) mode?
ftp_passive = false

; The FTP account username.
ftp_user = jbloggs

; The FTP account password.
ftp_pass = password

; Remote server path to upload the files to.
ftp_path = /

; Delete the local recordings if upload to FTP was successful?
ftp_delete_on_success = true

; Timeout (in seconds) when trying to connect to the FTP server
ftp_timeout = 30

[tts]

; Your API key for the Google Translate/Text to Speech Service.
tts_api_key = null

; The language that should be used for text synthesis.
tts_language = en

; An optional custom message to be broadcast at the ident interval.
; This could be used as a replacement for the 'auto_ident' feature allowing for a custom station ident
; alternatively could be used to broadcast useful news/messages.
; Set to 'null' to disable this feature.
tts_custom_ident = null

[weather]

; OpenWeatherMap.org API key
; Register for free at: https://openweathermap.org/
owm_api_key = null

; Broadcast current weather after the station ident
; You MUST have a valid Google API key set for this to work!
owm_enabled = false

; The location of your station/where you want the weather report taken from
; For example: "London,UK". You can test location names on the OpenWeatherMap.org site if you're not sure.
owm_locale = London,UK

; The "spoken" format for the weather broadcast
; List of all "placeholder" tags can be found here: http://pirrot.hallinet.com/weather-tags
owm_template = Weather conditions are {description}. Temperature is {temp_c} degrees celsius. Winds are {wind_mph} miles per hour from the {wind_dir_cardinal}. Humidity is {humidity} percent. Pressure is {pressure} hectopascals.

